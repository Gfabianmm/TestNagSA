@page "/Factura/nuevo"

<PageTitle>Factura</PageTitle>

@using TestNagSAApp.Data
@using TestNagSAApp.Domain.Factura;
@using TestNagSAApp.Domain.FormaPago;
@using TestNagSAApp.Domain.Producto;

@inject FacturaService facturaService
@inject FormaPagoService formaPagoService
@inject ProductoService productoService


@inject NavigationManager navigationManager

<h1>Factura Nueva</h1>
<br />
<div class="float-end">
    <a href="/Factura/fetch" class="btn btn-secondary">Regresar </a>
</div>
<p>Agregar nueva factura</p>



<EditForm Model="@_factura" OnValidSubmit="@OnValidSubmit">
    @if (_factura is not null)
    {

        <div class="card">
            <div class="card-body">

                <div class="col-12 ">
                    <div class="row">
                        <div class="col-12 col-md-6 mb-3">
                        <label class="form-label">Nombre Cliente:</label>

                        <InputText class="form-control" id="Descripcion" autocomplete="off" @bind-Value=@_factura.Cliente />
                        <div class="invalid-feedback">
                            <ValidationMessage class="text-danger" For="@(() => _factura.Cliente)" />
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 col-12 mb-3">
                        <label class="form-label">Fecha:</label>

                        <InputDate class="form-control" id="Descripcion" autocomplete="off" @bind-Value=@_factura.Fecha />
                        <div class="invalid-feedback">
                            <ValidationMessage class="text-danger" For="@(() => _factura.Fecha)" />
                        </div>
                    </div>
                    </div>
                    <div class="col-12">
                        <div class="d-flex">
                            <button class="btn btn-secondary" type="button" @onclick="AgregarNuevoDetalle">+ </button>                            &nbsp;&nbsp; <h5>Detalle</h5>

                        </div>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Producto</th>
                                    <th>Cantidad</th>
                                    <th>Valor</th>
                                    <th>Descuento</th>
                                    <th>IVA</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var detalle in _factura.FacturaDetalle)
                                {
                                    <tr>
                                        <td>
                                            <select class="form-control" @bind="detalle.IdProducto" @oninput="(e)=>{ ActualizarValor(e, detalle);}">
                                                @foreach (var producto in _productos)
                                                {
                                                    <option value="@producto.IdProducto">@producto.Descripcion</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                        <InputNumber class="form-control" @bind-Value="detalle.Cantidad" @onblur="()=>{ Calcular( detalle);}" />
                                        </td>

                                        <td>
                                            <span class="form-control">@detalle.Valor</span>
                                        </td>

                                        <td>
                                            <InputNumber class="form-control" @bind-Value="detalle.Descuento" @onblur="()=>{ Calcular( detalle);}" />
                                        </td>
                                        <td>
                                            <span class="form-control">@detalle.IVA</span>
                                            @* <InputNumber class="form-control" @bind-Value="detalle.IVA" /> *@
                                        </td>
                                        <td>
                                            <span class="form-control">@detalle.Total</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>


                    <div class="col-12 mt-3">
                        <div class="d-flex">
                            <button class="btn btn-secondary" type="button" @onclick="AgregarNuevoFormaPago">+ </button>
                            &nbsp;&nbsp;<h5>Forma pago</h5>
                        </div>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Forma Pago</th>
                                    <th>Valor</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var detalle in _factura.FacturaFormaPago)
                                {
                                    <tr>
                                        <td>
                                            <select class="form-control" @bind="detalle.IdFormaPago">
                                                @foreach (var pago in _formasPago)
                                                {
                                                    <option value="@pago.IdFormaPago">@pago.Descripcion</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <InputNumber class="form-control" @bind-Value="detalle.Valor" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>



                    <div class="row mt-3">
                        <div class="col">
                            <div class="col-lg-6 col-12 mb-3">
                                <label class="form-label">Descuento:</label>
                                <span class="form-control">@_factura.Descuento.ToString("C2") </span>
                                <div class="invalid-feedback">
                                    <ValidationMessage class="text-danger" For="@(() => _factura.Descuento)" />
                                </div>
                            </div>
                        </div>

                        <div class="col">
                            <div class="col-lg-6 mb-3">
                                <label class="form-label">Valor IVA:</label>
                                <span class="form-control">@_factura.IVA.ToString("C2")</span>
                                <div class="invalid-feedback">
                                    <ValidationMessage class="text-danger" For="@(() => _factura.IVA)" />
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <div class="col-lg-6 mb-3">
                                <label class="form-label">Valor Venta:</label>
                                <span class="form-control">@_factura.ValorTotal.ToString("C2")</span>
                                <div class="invalid-feedback">
                                    <ValidationMessage class="text-danger" For="@(() => _factura.ValorTotal)" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <DataAnnotationsValidator />
                </div>

            </div>
            <div class="card-footer d-flex justify-content-start py-6 px-9">

                <button disabled="@_isBusy" type="submit" class="btn btn-primary">
                    @if (!_isBusy)
                    {
                        <text>Guardar</text> <i class="bi bi-cloud-plus"></i>
                    }
                    else
                    {
                        <text>Procesando...</text>
                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    }
                </button>
            </div>
        </div>




    }


</EditForm>


@code {


    public bool _isBusy { get; set; }
    private FacturaDTO _factura = new FacturaDTO() { Estado = "A" };

    private ProductoDTO[]? _productos;
    private FormaPagoDTO[]? _formasPago;
    protected override async Task OnInitializedAsync()
    {

        _formasPago = await formaPagoService.GetAsync();
        _productos = await productoService.GetAsync();


    }
    public async void OnValidSubmit()
    {
        _isBusy = true;
        StateHasChanged();
        try
        {
            var response = await facturaService.PostAsync(_factura);
            if (response.Item1)
            {
                navigationManager.NavigateTo("/Factura/fetch");
            }
            else
            {

            }
        }
        catch (Exception)
        {
            //aqui debe mostrar alguna alerta
        }
        finally
        {
            _isBusy = false;
            StateHasChanged();
        }
    }

    public async void AgregarNuevoDetalle()
    {
        _isBusy = true;
        StateHasChanged();
        try
        {
            _factura.FacturaDetalle.Add(new FacturaDetalleDTO() {IdProducto="", Estado="A"});
        }
        catch (Exception)
        {
            //aqui debe mostrar alguna alerta
        }
        finally
        {
            _isBusy = false;
            StateHasChanged();
        }
    }

    public async void AgregarNuevoFormaPago()
    {
        _isBusy = true;
        StateHasChanged();
        try
        {
            _factura.FacturaFormaPago.Add(new FacturaFormaPagoDTO() { Valor = 0, Estado = "A" });
        }
        catch (Exception)
        {
            //aqui debe mostrar alguna alerta
        }
        finally
        {
            _isBusy = false;
            StateHasChanged();
        }
    }




    private void ActualizarValor(ChangeEventArgs e, FacturaDetalleDTO detalle)
    {
        var producto = _productos.FirstOrDefault(p => p.IdProducto == e.Value.ToString());

        if (producto != null)
        {
            detalle.Valor = producto.ValorVenta;
            Calcular(detalle);

            // Puedes realizar otras acciones aquí si es necesario
        }
    }

    private void Calcular(FacturaDetalleDTO detalle)
    {
        if (detalle.Cantidad <= 0)
            detalle.Cantidad = 1;
        detalle.IVA = ((detalle.Cantidad * detalle.Valor) - detalle.Descuento) * 0.12M;
        detalle.Total = ((detalle.Cantidad * detalle.Valor) - detalle.Descuento) + detalle.IVA;

        _factura.Descuento = _factura.FacturaDetalle.Sum(a => a.Descuento);
        _factura.IVA = _factura.FacturaDetalle.Sum(a => a.IVA);
        _factura.ValorTotal = _factura.FacturaDetalle.Sum(a => a.Total);

    }



}
