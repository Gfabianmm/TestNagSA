@page "/FormaPago/nuevo"

<PageTitle>Forma de Pago</PageTitle>

@using TestNagSAApp.Data
@using TestNagSAApp.Domain.FormaPago;
@inject FormaPagoService formaPagoService
@inject NavigationManager navigationManager

<h1>Forma de Pago</h1>
<br />
<div class="float-end">
    <a href="/FormaPago/fetch" class="btn btn-secondary">Regresar </a>
</div>
<p>Agregar nueva forma de pago</p>



<EditForm Model="@_formasPago" OnValidSubmit="@OnValidSubmit">
    @if (_formasPago is not null)
    {

        <div class="card">
            <div class="card-body">

                <div class="col-12 col-lg-6">
                    <div class="mb-3">


                        <label class="form-label">Descripción:</label>

                        <InputText class="form-control" id="Descripcion" autocomplete="off" @bind-Value=@_formasPago.Descripcion />
                        <div class="invalid-feedback">
                            <ValidationMessage class="text-danger" For="@(() => _formasPago.Descripcion)" />
                        </div>
                    </div>

                    <DataAnnotationsValidator />
                </div>

            </div>
            <div class="card-footer d-flex justify-content-start py-6 px-9">

                <button disabled="@_isBusy" type="submit" class="btn btn-primary">
                    @if (!_isBusy)
                    {
                        <text>Guardar</text> <i class="bi bi-cloud-plus"></i>
                    }
                    else
                    {
                        <text>Procesando...</text>
                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    }
                </button>
            </div>
        </div>




    }


</EditForm>


@code {

    
    public bool _isBusy { get; set; }
    private FormaPagoDTO _formasPago = new FormaPagoDTO() { Estado = "A" };

    protected override async Task OnInitializedAsync()
    {
        //_formasPago = await formaPagoService.GetAsync();
    }
    public async void OnValidSubmit()
    {
        _isBusy = true;
        StateHasChanged();
        try
        {
            var response= await formaPagoService.PostAsync(_formasPago);
            if (response.Item1)
            {
                navigationManager.NavigateTo("/FormaPago/fetch");
            }
            else
            {
                
            }
        }
        catch (Exception)
        {
            //aqui debe mostrar alguna alerta
        }
        finally
        {
            _isBusy = false;
            StateHasChanged();
        }
    }
}
