// <auto-generated />
using System;
using APIVentas.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIVentas.Migrations
{
    [DbContext(typeof(VentasDBContext))]
    [Migration("20231020062354_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIVentas.Models.Factura", b =>
                {
                    b.Property<Guid>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("UsuarioIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("IdFactura");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("APIVentas.Models.FacturaDetalle", b =>
                {
                    b.Property<Guid>("IdFacturaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<Guid>("IdFactura")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdProducto")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("UsuarioIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("IdFacturaDetalle");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdProducto");

                    b.ToTable("FacturaDetalle");
                });

            modelBuilder.Entity("APIVentas.Models.FacturaFormaPago", b =>
                {
                    b.Property<Guid>("IdFacturaFormaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdFactura")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdFormaPago")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFacturaFormaPago");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdFormaPago");

                    b.ToTable("FacturaFormaPago");
                });

            modelBuilder.Entity("APIVentas.Models.FormaPago", b =>
                {
                    b.Property<Guid>("IdFormaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFormaPago");

                    b.ToTable("FormaPago");

                    b.HasData(
                        new
                        {
                            IdFormaPago = new Guid("ca36f95f-778b-4466-ae52-17ef31f8adf8"),
                            Descripcion = "Efectivo",
                            Estado = "A",
                            FechaIngreso = new DateTime(2023, 10, 20, 1, 23, 54, 224, DateTimeKind.Local).AddTicks(7383),
                            UsuarioIngreso = "sistema"
                        },
                        new
                        {
                            IdFormaPago = new Guid("a9e7534d-a9be-4042-89a6-2472864e5737"),
                            Descripcion = "Cheque",
                            Estado = "A",
                            FechaIngreso = new DateTime(2023, 10, 20, 1, 23, 54, 224, DateTimeKind.Local).AddTicks(7393),
                            UsuarioIngreso = "sistema"
                        },
                        new
                        {
                            IdFormaPago = new Guid("c06a66a6-fac0-4d8a-9269-5c5369abe314"),
                            Descripcion = "Tarjeta de Crédito",
                            Estado = "A",
                            FechaIngreso = new DateTime(2023, 10, 20, 1, 23, 54, 224, DateTimeKind.Local).AddTicks(7395),
                            UsuarioIngreso = "sistema"
                        });
                });

            modelBuilder.Entity("APIVentas.Models.Producto", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorVenta")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto");

                    b.HasData(
                        new
                        {
                            IdProducto = "PV001",
                            Descripcion = "Producto 1",
                            Estado = "A",
                            FechaIngreso = new DateTime(2023, 10, 20, 1, 23, 54, 224, DateTimeKind.Local).AddTicks(7529),
                            Stock = 120,
                            UsuarioIngreso = "sistema",
                            ValorVenta = 3.25m
                        },
                        new
                        {
                            IdProducto = "PV002",
                            Descripcion = "Producto 2",
                            Estado = "A",
                            FechaIngreso = new DateTime(2023, 10, 20, 1, 23, 54, 224, DateTimeKind.Local).AddTicks(7572),
                            Stock = 50,
                            UsuarioIngreso = "sistema",
                            ValorVenta = 10.25m
                        },
                        new
                        {
                            IdProducto = "PV003",
                            Descripcion = "Producto 3",
                            Estado = "A",
                            FechaIngreso = new DateTime(2023, 10, 20, 1, 23, 54, 224, DateTimeKind.Local).AddTicks(7573),
                            Stock = 220,
                            UsuarioIngreso = "sistema",
                            ValorVenta = 1.15m
                        },
                        new
                        {
                            IdProducto = "PV004",
                            Descripcion = "Producto 4",
                            Estado = "A",
                            FechaIngreso = new DateTime(2023, 10, 20, 1, 23, 54, 224, DateTimeKind.Local).AddTicks(7574),
                            Stock = 615,
                            UsuarioIngreso = "sistema",
                            ValorVenta = 0.54m
                        });
                });

            modelBuilder.Entity("APIVentas.Models.FacturaDetalle", b =>
                {
                    b.HasOne("APIVentas.Models.Factura", "Factura")
                        .WithMany("FacturaDetalle")
                        .HasForeignKey("IdFactura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIVentas.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("APIVentas.Models.FacturaFormaPago", b =>
                {
                    b.HasOne("APIVentas.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("IdFactura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIVentas.Models.FormaPago", "FormaPago")
                        .WithMany()
                        .HasForeignKey("IdFormaPago")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("FormaPago");
                });

            modelBuilder.Entity("APIVentas.Models.Factura", b =>
                {
                    b.Navigation("FacturaDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
